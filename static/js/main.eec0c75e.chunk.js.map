{"version":3,"sources":["Login.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","login","bind","handleChange","signup","state","email","password","show","errorlogin","errorsignin","e","this","setState","target","name","value","Modal","Header","closeButton","Title","Body","Form","Group","controlId","Label","FormControl","type","id","placeholder","onChange","Control","Text","className","Alert","variant","Footer","Button","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4UAOqBA,E,kDACjB,WAAYC,GACX,IAAD,8BAAC,cAAMA,IACEC,MAAM,EAAKA,MAAMC,KAAX,gBACX,EAAKC,aAAa,EAAKA,aAAaD,KAAlB,gBAClB,EAAKE,OAAO,EAAKA,OAAOF,KAAZ,gBAEf,EAAKG,MAAM,CACPC,MAAM,GACNC,SAAS,GACTC,MAAK,EACJC,YAAW,EACXC,aAAY,GAVlB,E,kDAeMC,M,mCAGOA,GACTC,KAAKC,SAAL,eACKF,EAAEG,OAAOC,KAAMJ,EAAEG,OAAOE,U,6BAG1BL,M,+BAKH,OAER,8BACM,eAACM,EAAA,EAAD,CAAOT,KAAMI,KAAKP,MAAMG,KAAxB,UACE,cAACS,EAAA,EAAMC,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACF,EAAA,EAAMG,MAAP,MAEG,eAACH,EAAA,EAAMI,KAAP,gBAAc,iCACd,eAACC,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACA,cAACF,EAAA,EAAKG,MAAN,4BACC,cAACC,EAAA,EAAD,CACAC,KAAK,QACJZ,KAAK,QACLa,GAAG,QACHC,YAAY,sBACZC,SAAUlB,KAAKT,aACfa,MAAOJ,KAAKP,MAAMC,WAIjB,eAACgB,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACA,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKS,QAAN,CAAcJ,KAAK,WAAWZ,KAAK,WACjCa,GAAG,WACHC,YAAY,qBACZC,SAAUlB,KAAKT,aACfa,MAAOJ,KAAKP,MAAME,WAClB,cAACe,EAAA,EAAKU,KAAN,CAAWC,UAAU,aAArB,SACGrB,KAAKP,MAAMI,WAAW,cAACyB,EAAA,EAAD,CAAOC,QAAQ,SAAf,yEAA4FvB,KAAKP,MAAMK,YAAY,cAACwB,EAAA,EAAD,CAAOC,QAAQ,UAAf,wEAA4F,8FAG1O,cAACb,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAIvB,cAACP,EAAA,EAAMmB,OAAP,UAEL,cAACC,EAAA,EAAD,CAAQF,QAAQ,UAAUG,QAAS1B,KAAKX,MAAxC,8B,GAnEyBsC,aCGpBC,MAPf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eec0c75e.chunk.js","sourcesContent":["import React, {Component } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nexport default class Login extends Component {\r\n    constructor(props)\r\n    {super(props)\r\n        this.login=this.login.bind(this);\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.signup=this.signup.bind(this);\r\n\r\n     this.state={\r\n         email:\"\",\r\n         password:\"\",\r\n         show:true,\r\n          errorlogin:false,\r\n          errorsignin:false\r\n\r\n     }\r\n    }\r\n    \r\n    login(e){\r\n        \r\n    }  \r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    signup(e){\r\n       \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            \r\n<div>\r\n      <Modal show={this.state.show}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title></Modal.Title>\r\n        </Modal.Header>\r\n             <Modal.Body>  <form>\r\n             <Form.Group controlId=\"formBasicEmail\">\r\n             <Form.Label>Email address</Form.Label>\r\n              <FormControl \r\n              type=\"email\"\r\n               name=\"email\"\r\n               id=\"email\"\r\n               placeholder=\"enter email address\"\r\n               onChange={this.handleChange}\r\n               value={this.state.email}\r\n              />      \r\n                 \r\n              </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" name=\"password\"\r\n                  id=\"password\"                    \r\n                  placeholder=\"enter the password\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.password}/>\r\n                  <Form.Text className=\"text-muted\">\r\n                    {this.state.errorlogin?<Alert variant=\"danger\">wrong password or email,please signin if you are a new user</Alert>:this.state.errorsignin?<Alert variant=\"warning\">if you are a new user please use proper email and password</Alert>:<div>\"If you don't have account then please! click signup\"</div> }\r\n              </Form.Text> \r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                 </Form.Group>\r\n                    </form>\r\n               </Modal.Body>\r\n               <Modal.Footer>\r\n          \r\n          <Button variant=\"primary\" onClick={this.login}>\r\n            Login\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport Login from './Login.js';\n\nfunction App() {\n  return (\n    <Login/>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}